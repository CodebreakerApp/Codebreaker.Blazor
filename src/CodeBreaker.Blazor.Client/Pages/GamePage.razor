@page "/game"
@using CodeBreaker.Blazor.Client.Models
@using Codebreaker.GameAPIs.Client.Models

<FluentCard>
    @if (_gameStatus == GameMode.NotRunning)
    {
        <FluentGrid>
            <FluentGridItem xs="12" md="6">
                <FluentTextField
                    Class="full-width"
                    Label="@Loc["GamePage_NameInput"]"
                    Placeholder="@Loc["GamePage_NameInputPlaceholder"]"
                    @bind-Value="_name"
                    Immediate
                    Required
                    Maxlength="100" />
            </FluentGridItem>
            <FluentGridItem xs="12" md="3">
                <FluentSelect
                    Class="full-width"
                    Items="@_gameTypes.Keys"
                    Label="@Loc["GamePage_GameTypeInput"]"
                    @bind-Value="SelectedGameTypeKey"
                    Required />
            </FluentGridItem>
            <FluentGridItem xs="12" md="3">
                <FluentButton
                    Class="full-width"
                    Appearance="Appearance.Accent"
                    Disabled="!CanStartGame"
                    OnClick="StartGameAsync"
                    Loading="_loadingGame"
                    IconEnd="new Icons.Filled.Size20.BoardGames()">
                    @Loc["GamePage_StartButtonText"]
                </FluentButton>
            </FluentGridItem>
        </FluentGrid>
    }
    else if (_game is not null)
    {
        <div class="header flex">
            <div>
                <h2 class="flex-1">@_game?.GameType</h2>
                <StopWatch Running="@(_gameStatus == GameMode.MoveSet || _gameStatus == GameMode.Started)" />
            </div>
            <div>
                <FluentButton
                    IconEnd="new Icons.Filled.Size20.Dismiss()"
                    Loading="_isGameCancelling"
                    OnClick="CancelGame">
                    @Loc["GamePage_CancelButtonText"]
                </FluentButton>
            </div>
        </div>
        <Playground Game="_game" GameStatusChanged="GameStatusChanged" />
    }
</FluentCard>
