@page "/game"
@using CodeBreaker.Blazor.Client.Models
@using Codebreaker.GameAPIs.Client.Models

<FluentCard>
    <h2>@Loc["GamePage_Title"]</h2>

    @if (_gameStatus == GameMode.NotRunning)
    {
        <FluentGrid Class="align-items-end">
            <FluentGridItem xs="12" md="6">
                @if (_isNamePrefilled)
                {
                    <FluentTextField
                        Class="full-width"
                        Label="@Loc["GamePage_NameInput"]"
                        Required
                        Value="@_gamerName"
                        ReadOnly />
                }
                else
                {
                    <FluentSelect
                        Class="full-width"
                        Label="@Loc["GamePage_NameInput"]"
                        Items="_gamerNameSuggestions"
                        @bind-Value="_gamerName"
                        Required>
                        <FluentProgressRing />
                    </FluentSelect>
                }
            </FluentGridItem>
            <FluentGridItem xs="12" md="3">
                <FluentSelect
                    Class="full-width"
                    Items="@_gameTypes.Keys"
                    Label="@Loc["GamePage_GameTypeInput"]"
                    @bind-Value="SelectedGameTypeKey"
                    Required />
            </FluentGridItem>
            <FluentGridItem xs="12" md="3">
                <FluentButton
                    Class="full-width"
                    Appearance="Appearance.Accent"
                    Disabled="!CanStartGame"
                    OnClick="StartGameAsync"
                    Loading="_loadingGame"
                    IconEnd="new Icons.Filled.Size20.BoardGames()">
                    @Loc["GamePage_StartButtonText"]
                </FluentButton>
            </FluentGridItem>
        </FluentGrid>
    }
    else if (_game is not null)
    {
        <div class="header flex">
            <div>
                <h2 class="flex-1">@_game?.GameType</h2>
                <StopWatch Running="@(_gameStatus == GameMode.MoveSet || _gameStatus == GameMode.Started)" />
            </div>
            <div>
                <FluentButton
                    IconEnd="new Icons.Filled.Size20.Dismiss()"
                    Loading="_isGameCancelling"
                    OnClick="CancelGame">
                    @Loc["GamePage_CancelButtonText"]
                </FluentButton>
            </div>
        </div>
        <Playground Game="_game" GameStatusChanged="GameStatusChanged" />
    }
</FluentCard>
